---
- name: "Copy desired config to device: {{ desired_config }}"
  cisco.nxos.nxos_file_copy:
    local_file: "{{ filepath }}/{{ desired_config }}"
    remote_file: "{{ desired_config }}"
  register: "copy_result"

- name: "Replace configuration because baseline changed"
  block:
    # HAND EDIT SOURCE CODE; 3K supports config replace
    # /root/.ansible/collections/ansible_collections/cisco/nxos/plugins/module_utils/network/nxos/nxos.py
    # /root/.ansible/collections/ansible_collections/cisco/nxos/plugins/cliconf/nxos.py
    - name: "Replace the existing config with the new one"
      cisco.nxos.nxos_config:
        backup: true
        replace: "config"
        replace_src: "bootflash:{{ desired_config }}"
        save_when: "modified"

    - name: "Collect config replacement status"
      cisco.nxos.nxos_command:
        commands: "show config-replace status | json"
      register: "config_status"

    - name: "Ensure config replacement succeeded"
      vars:
        status: "{{ config_status.stdout[0].operation_status }}"
      assert:
        that: "status == 'Success'"
        msg: "Expected config replacement 'Success', saw {{ status }}"
      delegate_to: "localhost"
  when: "copy_result.changed or force_config"
...
